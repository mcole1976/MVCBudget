@model MVCBudget.Models.Visual_Grid

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool hasData = false;
    if(Model.Net_income > 0)
    {
        hasData = true; 
    }
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.css">
<script type="text/javascript" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>
<script src="~/js/visual_grid.js"></script>
<style>
     #dataTable th:nth-child(1), #dataTable td:nth-child(1) { /* Entry ID */
        display: none;
    }

    #dataTable th:nth-child(2), #dataTable td:nth-child(2) { /* Description Time */
        display: none;
    }

    #dataTable th:nth-child(5), #dataTable td:nth-child(5) { /* Income */
        display: none;
    }
</style>

<h1>Index</h1>

<div>
    <h4>Visual_Grid</h4>
    <hr />
    <dl class="row">
    </dl>
</div>

@using (Html.BeginForm("Index", "Visual_Grid", FormMethod.Post))
{
    <div class="form-group">
        <label asp-for="Selected" class="control-label"></label>
        <select asp-for="Selected" 
        id ="incomeDropdown" 
        class="form-control" 
        asp-items="@(new SelectList(Model.Income_Lots, "Key", "Value"))"
        data-change-url="@Url.Action("Change", "Visual_Grid")"
        data-index-url="@Url.Action("Index", "Visual_Grid")">
    
    </select>
        <span asp-validation-for="Selected" class="text-danger"></span>
        <br />
        @* <input type="submit" value="Show Values" /> *@
    </div>
}
<br />

<script type="text/javascript">
        //   document.addEventListener('DOMContentLoaded', function() {
        // const incomeDropdown = document.getElementById('incomeDropdown');
        // let dropdownChanged = false;

        // // Function to handle data fetching
        // function fetchData() {
        //     const selectedValue = incomeDropdown.value;
        //     const url = `/Visual_Grid/Change?Selected=${encodeURIComponent(selectedValue)}`;

        //     fetch(url)
        //         .then(response => {
        //             if (!response.ok) throw new Error('Network response was not ok');
        //             return response.json();
        //         })
        //         .then(data => {
        //             console.log("Received data:", data);
        //             if (data.Message && data.Message === "No data found") {
        //                 window.location.href = '/Visual_Grid/Index';
        //             } else {
        //                 updateTable(data);
        //             }
        //         })
        //         .catch(error => console.log("Error:", error));
        // }

    //     if (incomeDropdown) {
    //         // Run on initial page load
    //         fetchData();

    //         // Also run when dropdown changes
    //         incomeDropdown.addEventListener('change', function() {
    //             dropdownChanged = true;
    //             fetchData();
    //         });
    //     }
    // });
      
      
      
      $(document).ready(function () 
       
       { 
        //    $('#incomeDropdown').change(function () { 
        //        dropdownChanged = true;
        //        var selectedValue = $(this).val(); 
    
        //     // Check if a value is selected
        //     $.ajax({ url: '@Url.Action("Change", "Visual_Grid")', 
        //     type: 'GET', 
        //     data: { Selected: selectedValue }, 
        //     success: function (data) { console.log("Received data:", data); 
        //     if (data.Message && data.Message === "No data found")
        //     { window.location.href = '@Url.Action("Index", "Visual_Grid")'; } 
        //     else
        //     { updateTable(data); } }, error: function (error) { console.log("Error:", error); } });  
        // }); 

        $(document).on('click', '.saveButton', 
        function() 
            { 
                var entryId = $(this).data('entry-id'); 
                var amount = parseFloat($(this).closest('tr').find('.amountInput').val());
                var id = parseInt(document.getElementById('hiddenID').innerHTML) ;
                //saveEntry(entryId, amount); 
                console.log(entryId);
                console.log(amount);
                saveEntry(entryId, amount, id);

            });
        
        $(document).on('click', '.deleteButton',
        function()
            {
                var entryId = $(this).data('entry-id');
                //saveEntry(entryId, amount);
                console.log(entryId);
                deleteEntry(entryId);

            });
        
        $(document).on('click', '.amend_I',
        function()
            {

                 var element = document.getElementById('hiddenID');

                var entryId = document.getElementById('hiddenID').innerHTML ;

                //
                var amount = $('#incomeInput').val();
                //saveEntry(entryId, amount);
                console.log(entryId);
                console.log(amount);
                saveIncome(entryId, amount);

            });
        });
        function makeGrid()
        {
            var entryId = document.getElementById('hiddenID').innerHTML ;

            $.ajax({ url: '@Url.Action("Change", "Visual_Grid")',
            type: 'GET',
            data: { Selected: entryId },
            success: function (data) { console.log("Received data:", data);
            if (data.Message && data.Message === "No data found")
            { window.location.href = '@Url.Action("Index", "Visual_Grid")'; }
            else
            { updateTable(data); } }, error: function (error) { console.log("Error:", error); } });
        }

        $(document).on('click', '#addExtraData',function()
        {

            var element = document.getElementById('hiddenID');

            var entryId = document.getElementById('hiddenID').innerHTML ;

            
            if (entryId == "") 
            {
                 entryId = $('#incomeDropdown').val();
            }
                    



            fnColateExtraData(entryId);
        }
        );

    function updateTable(data) 
    {
        
        const table = document.getElementById('dataTable');
        const incomeInput = document.getElementById('incomeInput');
        const costInput = document.getElementById('costInput');
        const netInput = document.getElementById('netInput');
        const hiddenID = document.getElementById('hiddenID');

         if (!data || !Array.isArray(data) || data.length === 0) 
         {
            // Clear the table
            table.innerHTML = ''; // Clear the table
            incomeInput.value = '';
            costInput.value = '';
            netInput.value = '';
            hiddenID.innerHTML = '';
            console.log("No data available. Table has been cleared.");
            return; // Exit the function early
        }       

        // Build the table header
        const buildTableHeader = () => 
        {
            return `
                <thead>
                    <tr>
                        <th scope="col">Entry ID</th>
                        <th scope="col">Description Time</th>
                        <th scope="col">Entry Name</th>
                        <th scope="col">Amount</th>
                        <th scope="col">Income</th>
                        <th scope="col">Save</th>
                        <th scope="col">Delete</th>
                    </tr>
                </thead>
            `;
        };

        const buildTableRow = (item) => 
        {
            return `
                <tr>
                    <td>${item.entry_id}</td>
                    <td>${item.description_time}</td>
                    <td>${item.entry_name}</td>
                    <td><input type="text" class="amountInput" value="${item.amount}"></td>
                    <td>${item.income}</td>
                    <td><button type="button" class="btn btn-primary saveButton" data-entry-id="${item.entry_id}" data-amount="${item.amount}">Save</button></td>
                    <td><button type="button" class="btn btn-primary deleteButton" data-entry-id="${item.entry_id}">Delete</button></td>
                </tr>
            `;
        };

        // Calculate total costs
        const calculateTotalCosts = (data) => 
        {
            return data.reduce((sum, item) => sum + item.amount, 0);
        };

        table.innerHTML = '';

        // Build the table
        let rows = buildTableHeader();
        let summedcosts = 0;
        let income = 0;
        let main_id = 0;

        
        data.forEach((item, index) => 
        {
            if (item && item.entry_id && item.description_time && item.entry_name && item.amount && item.income) 
            {
                if (index === 0) 
                {
                income = item.income;
                main_id = item.id;
                hiddenID.innerHTML = main_id;
                }
                rows += buildTableRow(item);
                summedcosts += item.amount;
            } 
            else 
            {
                console.error('Invalid item:', item);
            }
        });

        table.innerHTML = rows;
        incomeInput.value = income;
        costInput.value = summedcosts;
        netInput.value = income - summedcosts;
       

    }
    async function saveIncome(entryId, amount)
    {
        console.log('Data:', { entryId: entryId, amount: amount });

        const url = '/Visual_Grid/Income_Amend';
        const type = 'POST';
        const data = JSON.stringify({ entryId, amount });
        console.log(JSON.stringify({ entryId, amount }));

        try 
        {
            const response = await makeAjaxCall(url, type, data);
            console.log('Entry saved successfully:', response);
        } 
        catch (error) 
        {
            console.error('Error saving entry:', error);
        }


        // $.ajax(
        //     { url: '/Visual_Grid/Income_Amend'
        //     , type: 'POST'
        //     , contentType: 'application/json'
        //     , data: JSON.stringify({ entryId: entryId, amount: amount })
        //     , success: function(response)
        //         { 
        //             console.log('Entry saved successfully:', response); 
        //             fnSetVal(response);
        //             // document.getElementById('incomeInput').value = response.income;
        //             // document.getElementById('costInput').value = response.costs;
        //             // document.getElementById('netInput').value =  response.income - response.costs;
        //         }
        //     , error: function(error)
        //         { console.error('Error saving entry:', error); }


        // });

    }

    async function saveEntry(entryId, amount, id)
    {
        const url = '/Visual_Grid/Make';
        const type = 'POST';
        const data = JSON.stringify({ entryId: entryId, amount: amount, id: id });

        console.log('Data:', { entryId: entryId, amount: amount });

        try 
        {
            const response = await makeAjaxCall(url, type, JSON.stringify(data));
            console.log('Entry saved successfully:', response);
             // Ensure this runs only after the response is received
        } 
        catch (error) 
        {
        console.error('Error saving entry:', error);
        }

        // $.ajax(
        //     { url: '/Visual_Grid/Make'
        //     , type: 'POST'
        //     , contentType: 'application/json'
        //     , data: JSON.stringify({ entryId: entryId, amount: amount, id: id })
        //     , success: function(response)
        //         { console.log('Entry saved successfully:', response);
        //         fnSetVal(response);
        //         }

        //     , error: function(error)
        //         { console.error('Error saving entry:', error); }


        // });

    }




        function makeAjaxCall(url, type, data = null) {
        return new Promise((resolve, reject) => {
        $.ajax({
            url: url,
            type: type,
            contentType: 'application/json',
            data: data,
            success: function(response) 
            {
                resolve(response);
                fnSetVal(response);
            },
            error: function(error) {
                reject(error);
            }
        });
    });
    }



    function fnSetVal(response) {
        document.getElementById('incomeInput').value = response.income;
        document.getElementById('costInput').value = response.costs;
        document.getElementById('netInput').value = response.income - response.costs;
    }   


    

    function deleteEntry(entryId) 
    { 
        console.log('Delete button clicked for entry ID:', entryId); 
        $.ajax({ url: '/Visual_Grid/DeleteEntry'
        , type: 'POST'
        , contentType: 'application/json'
        , data: JSON.stringify({ entryId: entryId })
        , success: function(response) 
        { 
            console.log('Entry deleted successfully:', response); 
            makeGrid();
            fnSetIncome();
        
        }
        , error: function(error) { console.error('Error deleting entry:', error); } 
        });
      

    }

    function fnSetIncome()
    {
        var entryId = document.getElementById('hiddenID').innerHTML ;
        var amount = $('#incomeInput').val();

        var entryId = document.getElementById('hiddenID').innerHTML ;
         $.ajax(
            { url: '/Visual_Grid/Income_Amend'
            , type: 'POST'
            , contentType: 'application/json'
            , data: JSON.stringify({ entryId: entryId, amount: amount })
            , success: function(response)
                {
                    console.log('Entry saved successfully:', response);
                    fnSetVal(response);
                    // document.getElementById('incomeInput').value = response.income;
                    // document.getElementById('costInput').value = response.costs;
                    // document.getElementById('netInput').value =  response.income - response.costs;
                }
            , error: function(error)
                { console.error('Error saving entry:', error); }


        });
    }
    function fnColateExtraData(entryID)
    {
        console.log(entryID);
        var containers = document.getElementsByClassName('frmInputs');
        console.log(containers);
        var data = [];

         for (var i = 0; i < containers.length; i++) {
            var description = containers[i].getElementsByClassName('tv')[0].value;
            var decimalValue = containers[i].getElementsByClassName('dv')[0].value;

            // Add an overarching ID to each dataset (example with static ID)
            var entryId = entryID; // Replace this with your dynamic/static ID logic
            data.push({
                entryId: entryId,
                description: description,
                amount: parseFloat(decimalValue)
            });
        }

        console.log(data);

        for (var j = 0; j < data.length; j++) {
            (function(index) {
                fetch('/Visual_Grid/ExtraData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data[index])
                })
                .then(response => response.json())
                .then(result => {
                    console.log('Success:', result);
                    fnSetVal(result);
                     makeGrid();
                     fnClearExtra();
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            })(j);
        }


        
       


    }
    function fnClearExtra()
    {
        var stringKeysElements = document.getElementsByName('StringKeys');
        for (var i = 0; i < stringKeysElements.length; i++) {
            stringKeysElements[i].value = "";
        }

        // Reset textboxes with name="DecimalValues"
        var decimalValuesElements = document.getElementsByName('DecimalValues');
        for (var i = 0; i < decimalValuesElements.length; i++) {
            decimalValuesElements[i].value = "";
        }
    }


</script>
  @using (Html.BeginForm("Edit", "Visual_Grid", FormMethod.Post))
                    {
            
                    }

<table class="table" id="dataTable">
   
    <tbody>
    </tbody>

</table>
<div class="row">
    <div class="col-sm-1">
        <label id="hiddenID" class="hLabel"></label>
    </div>
    <div class="col-sm-3">
        <label>Gross Income</label>
        <input type="text" id="incomeInput"  />
    </div>
    <div class="col-sm-4">
        <label>Total Costs</label>
        <input type="text" id="costInput" readonly />
    </div>
    <div class="col-sm-4">
        <label>Net Income</label>
        <input type="text" id="netInput" readonly />
    </div>
</div>
<div class="row">
    <div class="col-sm-2">
        
    </div>
    <div class="col-sm-10">
        
        <button type="button" class="btn btn-primary btn-lg amend_I" text="Amend Income">Amend Income</button>
    </div>
 
</div>
<div>
    <h4>Add Extra Expenses</h4>
    @* <div class="col-12">
        <button type="button" class="btn-dark" id="controllAdd">Add More Controls</button>
    </div> *@
    <form class="FormExtras">

        <div class="col-12 frmInputs" id="dynamicControls">
       
        
            <div class="col-12" id="ExtraControls" >
                <input type="text" id="" name="StringKeys" class="tv" value="" />
                <input type="text" name="DecimalValues" class="dv" value="" />
            </div>
        
    </div>
    <div class="col-12">
            <button type="button" class="btn-light" id="addExtraData">Add Extra Data</button>
    </div>
    </form>
    
    
</div>




    


